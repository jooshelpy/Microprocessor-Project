C51 COMPILER V9.60.7.0   MAIN                                                              12/21/2023 00:47:27 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: O:\01. Programs\Keil\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\main.lst) TABS(2) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <REG51.H>
   2          //#include <AT89X51.H>
   3          
   4          
   5          float pTerm, iTerm, dTerm;
   6          int error;
   7          int previousError;
   8          
   9          float kp = 11; //11
  10          float ki = 0;
  11          float kd = 11; //11
  12          
  13          float output;
  14          int integral, derivative;
  15          
  16          sbit irSensor1 = P2^5;  // IR sensor pins
  17          sbit irSensor2 = P2^6;
  18          sbit irSensor3 = P2^7;
  19          
  20          sbit motor1Forward = P1^5;
  21          sbit motor1Backward = P1^4;
  22          sbit motor1pwmPin = P3^2;
  23          sbit motor2Forward = P1^3;
  24          sbit motor2Backward = P1^2;
  25          sbit motor2pwmPin = P3^1;
  26          
  27          int motor1newSpeed;
  28          int motor2newSpeed;
  29          int motor2Speed = 40; //Default 70
  30          int motor1Speed = 40; //Default 120
  31          
  32          
  33          int irReadings[3];
  34          
  35          void delay(unsigned int time) {
  36   1          unsigned int i, j;
  37   1          for (i = 0; i < time; i++)
  38   1              for (j = 0; j < 1275; j++);
  39   1      }
  40          
  41          void readIRSensors() {
  42   1          // Read the IR sensors and put the readings in irReadings array
  43   1          irReadings[0] = irSensor1;
  44   1          irReadings[1] = irSensor2;
  45   1          irReadings[2] = irSensor3;
  46   1      }
  47          
  48          void calculateError() {
  49   1          // Determine an error based on the readings
  50   1          if (irReadings[0] && irReadings[1] && !irReadings[2]) {
  51   2              error = 2;
  52   2          } else if (irReadings[0] && !irReadings[1] && !irReadings[2]) {
  53   2              error = 1;
  54   2          } else if (irReadings[0] && !irReadings[1] && irReadings[2]) {
C51 COMPILER V9.60.7.0   MAIN                                                              12/21/2023 00:47:27 PAGE 2   

  55   2              error = 0;
  56   2          } else if (!irReadings[0] && !irReadings[1] && irReadings[2]) {
  57   2              error = -1;
  58   2          } else if (!irReadings[0] && irReadings[1] && irReadings[2]) {
  59   2              error = -2;
  60   2          } else if (irReadings[0] && irReadings[1] && irReadings[2]) {
  61   2              if (previousError == -2) {
  62   3                  error = -3;
  63   3              } else {
  64   3                  error = 3;
  65   3              }
  66   2          } else if (!irReadings[0] && !irReadings[1] && !irReadings[2]) {
  67   2              error = 0;
  68   2          }
  69   1      }
  70          
  71          void pidCalculations() {
  72   1          pTerm = kp * error;
  73   1          integral += error;
  74   1          iTerm = ki * integral;
  75   1          derivative = error - previousError;
  76   1          dTerm = kd * derivative;
  77   1          output = pTerm + iTerm + dTerm;
  78   1          previousError = error;
  79   1      }
  80          
  81          void changeMotorSpeed() {
  82   1          // Change motor speed of both motors accordingly
  83   1          motor2newSpeed = motor2Speed + output;
  84   1          motor1newSpeed = motor1Speed - output;
  85   1          // Constrain the new speed of motors to be between the range 0-255
  86   1          motor2newSpeed = (motor2newSpeed > 255) ? 255 : motor2newSpeed;
  87   1          motor1newSpeed = (motor1newSpeed > 255) ? 255 : motor1newSpeed;
  88   1          // Set new speed, and run motors in the forward direction
  89   1          motor2pwmPin = motor2newSpeed;
  90   1          motor1pwmPin = motor1newSpeed;
  91   1          motor2Forward = 1;
  92   1          motor2Backward = 0;
  93   1          motor1Forward = 1;
  94   1          motor1Backward = 0;
  95   1      }
  96          
  97          void main() {
  98   1          while (1) {
  99   2              readIRSensors();
 100   2              calculateError();
 101   2              pidCalculations();
 102   2              changeMotorSpeed();
 103   2              delay(100);  // Adjust the delay as needed
 104   2          }
 105   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    540    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     50    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.60.7.0   MAIN                                                              12/21/2023 00:47:27 PAGE 3   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
